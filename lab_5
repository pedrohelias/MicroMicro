Para as questões 2 a 5, considere que as variáveis f, g, h, i e j são do tipo inteiro (16 bits na arquitetura do MSP430),
e que o vetor A[] é do tipo inteiro. Estas variáveis estão armazenadas nos seguintes registradores: 
f: R4
g: R5
h: R6 
i: R7 
j: R8
A: R9 
Utilize os registradores R11, R12, R13, R14 e R15 para armazenar valores temporários.

Escreva os trechos de código assembly do MSP430 para: (a) Somente setar o bit menos significativo de R5.
(b) Somente setar dois bits de R6: o menos significativo e o segundo menos significativo. 
(c) Somente zerar o terceiro bit menos significativo de R7. 
(d) Somente zerar o terceiro e o quarto bits menos significativo de R8. 
(e) Somente inverter o bit mais significativo de R9.
(f) Inverter o nibble mais significativo de R10, e setar o nibble menos significativo de R10.

"Traduza" o seguinte trecho de código em C para o assembly do MSP430:

if(i>j) f = g+h+10;
else f = g-h-10;

              cmp R8,R7 
              jl label_if
label_else    add.w R5,R6
              add.w #10,R6
              mov.w R6,R12
              mov.w R12,R4
              EXIT;
label_if      sub.w R5,R6
              sub #10,R6
              mov.w R6,R12
              mov.w R12,R4
              EXIT;


"Traduza" o seguinte trecho de código em C para o assembly do MSP430:
while(save[i]!=k) i++;
              
              mov.w #k,R11
compara       cmp R7,R11
              jne looping
              EXIT;
looping       inc.w R11
              jmp compara
              

"Traduza" o seguinte trecho de código em C para o assembly do MSP430:
for(i=0; i<100; i++) A[i] = i*2;

comp        cmp #100,R11
            jl final
            inc.w R7
            mov.w R7,R11
            rla.w R7
            rla.w R7
            mov.w R7,A
            inc.w R11
            jmp comp
final       EXIT


"Traduza" o seguinte trecho de código em C para o assembly do MSP430:
for(i=99; i>=0; i--) A[i] = i*2;

comp        cmp R11,0
            jl final
            dec.w R7
            mov.w R7,R11
            rla.w R7
            rla.w R7
            mov.w R7,A
            dec.w R11
            jmp comp
final       EXIT





